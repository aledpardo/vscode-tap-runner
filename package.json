{
  "name": "vscode-tap-runner",
  "displayName": "Tap Runner",
  "description": "Simple way to run or debug a single (or multiple) TAP tests from context-menu",
  "version": "0.0.1",
  "publisher": "aledpardo",
  "author": "Alexandre Pardo",
  "repository": {
    "type": "git",
    "url": "https://github.com/aledpardo/vscode-tap-runner.git"
  },
  "license": "MIT",
  "icon": "public/icon.png",
  "engines": {
    "vscode": "^1.72.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension",
  "contributes": {
    "configuration": [
      {
        "title": "Tap-Runner Config",
        "properties": {
          "taprunner.configPath": {
            "type": "string",
            "default": "",
            "description": "Tap config path (relative to ${workFolder} e.g. tap-config.json)",
            "scope": "window"
          },
          "taprunner.tapPath": {
            "type": "string",
            "default": "",
            "description": "Absolute path to tap bin file (e.g. /usr/lib/node_modules/tap/bin/run.js)",
            "scope": "window"
          },
          "taprunner.projectPath": {
            "type": "string",
            "default": "",
            "description": "Absolute path to project directory (e.g. /home/me/project/sub-folder)",
            "scope": "window"
          },
          "taprunner.debugOptions": {
            "type": "object",
            "default": {},
            "description": "Add or overwrite vscode debug configurations (only in debug mode) (e.g. { \"args\": [\"--no-cache\"] })",
            "scope": "window"
          },
          "taprunner.runOptions": {
            "type": "array",
            "default": [],
            "items": {
              "type": "string",
              "description": "CLI Option e.g. --coverage"
            },
            "description": "Add CLI Options to the Tap Command e.g. https://node-tap.org/docs/configuring/",
            "scope": "window"
          },
          "taprunner.tapCommand": {
            "type": "string",
            "default": "",
            "description": "Define an alternative Tap command (e.g. for Create React App and similar abstractions)",
            "scope": "window"
          },
          "taprunner.disableCodeLens": {
            "type": "boolean",
            "default": false,
            "description": "Disable CodeLens feature",
            "scope": "window"
          },
          "taprunner.runInExternalNativeTerminal": {
            "type": "boolean",
            "default": false,
            "description": "Run tap runner in external native terminal. Disabled on debug mode",
            "scope": "window"
          },
          "taprunner.codeLens": {
            "type": "array",
            "default": [
              "run",
              "debug"
            ],
            "description": "Enable desired codeLens, possible value : 'run', 'debug', 'watch', 'coverage'. Defaults to ['run', 'debug'] ",
            "items": {
              "type": "string",
              "description": "Either 'run', 'debug', 'watch', 'coverage'"
            },
            "scope": "window"
          },
          "taprunner.codeLensSelector": {
            "type": "string",
            "default": "**/*.{test,spec}.{js,jsx,ts,tsx}",
            "description": "CodeLens will be shown on files matching this pattern"
          },
          "taprunner.enableYarnPnpSupport": {
            "type": "boolean",
            "default": false,
            "description": "Enable if you are using Yarn 2 with Plug'n'Play",
            "scope": "window"
          },
          "taprunner.changeDirectoryToWorkspaceRoot": {
            "type": "boolean",
            "default": true,
            "description": "Changes directory to workspace root before executing the test",
            "scope": "window"
          },
          "taprunner.preserveEditorFocus": {
            "type": "boolean",
            "default": false,
            "description": "Preserve focus on editor when running tests",
            "scope": "window"
          },
          "taprunner.yarnPnpCommand": {
            "type": "string",
            "default": "yarn-*.*js",
            "description": "Command for debugging with Plug'n'Play",
            "scope": "window"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "extension.runTap",
        "title": "Run Tap"
      },
      {
        "command": "extension.runTapPath",
        "title": "Run Tap on Path"
      },
      {
        "command": "extension.runTapCoverage",
        "title": "Run Tap and generate Coverage"
      },
      {
        "command": "extension.runTapAndUpdateSnapshots",
        "title": "Run Tap and update Snapshots"
      },
      {
        "command": "extension.runPrevTap",
        "title": "Run Tap - Run Previous Test"
      },
      {
        "command": "extension.runTapFile",
        "title": "Run Tap on File"
      },
      {
        "command": "extension.debugTap",
        "title": "Debug Tap"
      },
      {
        "command": "extension.debugTapPath",
        "title": "Debug Tap on Path"
      },
      {
        "command": "extension.runTapFileWithCoverage",
        "title": "Run Tap File and generate Coverage"
      },
      {
        "command": "extension.runTapFileWithWatchMode",
        "title": "Run Tap File in Watch Mode"
      },
      {
        "command": "extension.watchTap",
        "title": "Run Tap --watch"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.runTap",
          "group": "02_tap"
        },
        {
          "command": "extension.debugTap",
          "group": "02_tap"
        }
      ],
      "explorer/context": [
        {
          "command": "extension.runTapPath",
          "when": "explorerResourceIsFolder || resourceFilename =~ /.*\\.(spec|test)\\.(js|jsx|ts|tsx)$/",
          "group": "02_tap@1"
        },
        {
          "command": "extension.debugTapPath",
          "when": "explorerResourceIsFolder || resourceFilename =~ /.*\\.(spec|test)\\.(js|jsx|ts|tsx)$/",
          "group": "02_tap@2"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "build": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "test": "jest .src/test",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish patch -m '%s [skip ci]' && git push",
    "ovsx:publish": "ovsx publish",
    "publish": "npm run vsce:publish && npm run ovsx:publish",
    "eslint:fix": "eslint --cache --fix",
    "prettier": "prettier --write"
  },
  "devDependencies": {
    "@jest/types": "^29.1.2",
    "@types/jest": "^29.1.2",
    "@types/node": "^18.8.5",
    "@types/vscode": "^1.72.0",
    "@typescript-eslint/eslint-plugin": "^5.40.0",
    "@typescript-eslint/parser": "^5.40.0",
    "babylon": "^6.18.0",
    "eslint": "^8.25.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.1.2",
    "ovsx": "^0.5.1",
    "prettier": "^2.7.1",
    "source-map-support": "^0.5.21",
    "ts-jest": "^29.0.3",
    "ts-loader": "^9.4.1",
    "typescript": "^4.8.4",
    "vsce": "^2.11.0",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0"
  },
  "dependencies": {
    "jest-editor-support": "^30.2.0"
  }
}
